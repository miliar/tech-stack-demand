version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    deploy:
      restart_policy:
        condition: any
        
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "job_urls:2:1,job_descriptions:2:1,job_keywords:2:1,errors:1:1"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: /logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- ./kafka_logs:/logs
    deploy:
      restart_policy:
        condition: any
        
  kafka_ui:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication"
    depends_on:
      - kafka
      - zookeeper
    deploy:
      restart_policy:
        condition: any
  
  job_description_scraper:
    build: ./job_description_scraper
    depends_on:
      - kafka
    deploy:
      replicas: 2
      restart_policy:
        delay: 60s
        max_attempts: 5
        window: 120s
     
  job_url_scraper:
    build: ./job_url_scraper
    depends_on:
      - kafka
    deploy:
      restart_policy:
        delay: 86400s

  redis:
    image: 'bitnami/redis:5.0'
    environment:
      - REDIS_PASSWORD=password
    ports:
      - '6379:6379'
    volumes:
      - ./keywords_api/redis_data:/bitnami/redis/data
    deploy:
      restart_policy:
        condition: any
  
  keywords_api:
    build: ./keywords_api
    ports:
      - '4000:4000'
    depends_on:
      - redis
    deploy:
      restart_policy:
        condition: any

  job_keywords_parser:
    build: ./job_keywords_parser
    depends_on:
      - kafka
      - keywords_api
    deploy:
      replicas: 2
      restart_policy:
        delay: 60s
        max_attempts: 5
        window: 120s

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - ./neo4j_data_loader/neo4j_data:/data
    deploy:
      restart_policy:
        condition: any
        
  neo4j_data_loader:
    build: ./neo4j_data_loader
    depends_on:
      - neo4j
      - kafka
    deploy:
      replicas: 2
      restart_policy:
        delay: 60s
        max_attempts: 5
        window: 120s
